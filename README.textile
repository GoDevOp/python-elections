<pre><code>   _
  (_)
 <___>
  | |______
  | |* * * )
  | | * * (_________
  | |* * * |* *|####)
  | | * * *| * |   (________________
  | |* * * |* *|####|##############|
  | | * * *| * |    |              |
  | |* * * |* *|####|##############|
  | |~~~~~~| * |    |              |
  | |######|* *|####|##############|
  | |      |~~~'    |              |
  | |######|########|##############|
  | |      |        |              |
  | |######|########|##############|
  | |~~~~~~|        |              |
  | |      |########|##############|
  | |      '~~~~~~~~|              |
  | |               |##############|
  | |               '~~~~~~~~~~~~~~~
  | |
  | |      PYTHON-ELECTIONS
  | |
  | |</code></pre>

A Python wrapper for the Associated Press's U.S. election data service. 

h2. Features

* AP election results for U.S. states and counties.

h2. Requirements

In order to use this library, you must pay AP for access to the data. More information can be found on the "AP's web site":http://www.apdigitalnews.com/ap_elections.html or by contacting Anthony Marquez at "amarquez@ap.org":mailto:amarquez@ap.org.

h2. Getting Started

Install the library from PyPI

<pre><code>$ pip install python-elections</code></pre>

Current API:
<pre><code>>>> from elections import AP
>>> client = AP(uname, pwd)
>>> ia = client.get_state('IA')
>>> ia.races[0]
<Race: President>
>>> ia.races[0].candidates[4]
<Candidate: Rick Santorum>
>>> ia.races[0].candidates[4].vote_total
0
>>> ia.races[0].candidates[4].is_winner
False
>>> ia.races[0].state_results[:3]
[<Result: Other, Iowa (state), 0>, <Result: Jon Huntsman, Iowa (state), 0>, <Result: Newt Gingrich, Iowa (state), 0>]
>>> ia.races[0].counties[10].results[:3]
[<Result: Other, Wright, 0>, <Result: Jon Huntsman, Wright, 0>, <Result: Newt Gingrich, Wright, 0>]
>>> ia.fetch_delegates() # Gets delegate totals for all candidates in a primary race
>>> ia.races[0].candidates[4].delegates
0
</code></pre>

Pull Iowa GOP results

<pre><code>import calculate
from elections import AP
from operator import itemgetter
from private_settings import *

# Log into AP
client = AP(AP_USERNAME, AP_PASSWORD)

# Pull the data on the Iowa GOP caucus
iowa = client.get_state("IA")
gop_caucus = iowa.filter_races(office_name='President', party='GOP')[0]

print gop_caucus.office_name
print "%s/%s (%s percent)" % (
    gop_caucus.state.precincts_reporting,
    gop_caucus.state.precincts_total,
    gop_caucus.state.precincts_reporting_percent,
)
print "%s votes cast" % gop_caucus.state.votes_cast

vote_totals = [i.vote_total for i in gop_caucus.state.results]
margin_of_victory = calculate.margin_of_victory(vote_totals)
if margin_of_victory:
    print "%s leads by %s votes" % (gop_caucus.state.results[0].candidate, margin_of_victory)
else:
    print "It's a tie."

for result in gop_caucus.state.results:
    print result</code></pre>

h2. Credits

ASCII art by Joan Stark
