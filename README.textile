<pre><code>       _
      (_)
     <___>
      | |______
      | |* * * )
      | | * * (_________
      | |* * * |* *|####)
      | | * * *| * |   (________________
      | |* * * |* *|####|##############|
      | | * * *| * |    |              |
      | |* * * |* *|####|##############|
      | |~~~~~~| * |    |              |
      | |######|* *|####|##############|
      | |      |~~~'    |              |
      | |######|########|##############|
      | |      |        |              |
      | |######|########|##############|
      | |~~~~~~|        |              |
      | |      |########|##############|
      | |      '~~~~~~~~|              |
      | |               |##############|
      | |               '~~~~~~~~~~~~~~~
      | |
      | |
      | |</code></pre>


Feel free to screw with, destroy, rebuild, rename whatever I've got right now. Just getting something down on paper, so to speak.

Current API:
<pre><code>>>> from elections import AP
>>> client = AP(username, password)
>>> iowa = client.get_state('IA')
>>> iowa.races
[<Race: President>]
>>> iowa.races[0].candidates[:3]
[<Candidate:  Other>, <Candidate: Jon Huntsman>, <Candidate: Newt Gingrich>]
>>> iowa.races[0].state_results[:3]
[<Result:  Other, Iowa (state), 0>, <Result: Jon Huntsman, Iowa (state), 0>, <Result: Newt Gingrich, Iowa (state), 0>]
>>> iowa.counties[:3]
[<ReportingUnit: Winnebago>, <ReportingUnit: Washington>, <ReportingUnit: Warren>]
>>> iowa.counties[0].results[:3]
[<Result:  Other, Winnebago, 0>, <Result: Jon Huntsman, Winnebago, 0>, <Result: Newt Gingrich, Winnebago, 0>]
</code></pre>

Pull Iowa GOP results

<pre><code>import calculate
from elections import AP
from operator import itemgetter
from private_settings import *

# Log into AP
client = AP(AP_USERNAME, AP_PASSWORD)

# Pull the data on the Iowa GOP caucus
iowa = client.get_state("IA")
gop_caucus = [i for i in iowa.races if i.party == 'R' and i.office_name == 'President'][0]

print gop_caucus.office_name
print "%s/%s (%s percent)" % (
    gop_caucus.precincts_reporting,
    gop_caucus.precincts_total,
    gop_caucus.precincts_reporting_percent,
)
print "%s votes cast" % gop_caucus.votes_cast

state_results = [(
    i.vote_total,
    calculate.percentage(i.vote_total, gop_caucus.votes_cast),
    i.candidate.__unicode__(),
    i.candidate.is_winner,
    ) for i in gop_caucus.state_results]

state_results.sort(key=itemgetter(0,2))

vote_totals = [i[0] for i in state_results]
margin_of_victory = calculate.margin_of_victory(vote_totals)
if margin_of_victory:
    print "%s leads by %s votes" % (state_results[0][2], margin_of_victory)
else:
    print "It's a tie."

for cand in state_results:
    print cand[2], cand[1], cand[0], cand[3]</code></pre>
